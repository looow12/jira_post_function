package com.rs2;

import java.io.*;
import org.jsoup.*;
import java.io.IOException;
import java.lang.*;
import org.jsoup.nodes.*;

public class Main {
    private static final String PATH = "C:\\Users\\laura.ferrier\\Desktop\\MAILS\\";

    public static void main(String[] args) throws IOException {
        Main myMain = new Main();

        //subfiles is the list of emails in directory
        File[] subfiles = myMain.getFileListFromPath(PATH);

        for(File file : subfiles) {
            String everything = myMain.getEmail(file);
            String Comments = myMain.getComments(everything);
            System.out.println("Result of the comment : \n" + "\n" + Comments);





            //Document doc = Jsoup.parseBodyFragment(everything);



        /*for (int j = 0; j < subfiles.length; j++) {
            System.out.println(subfiles[j].getName());
            String NameOfTheFile = subfiles[j].getName();

            FileReader text = new FileReader(PATH + NameOfTheFile);
            BufferedReader ToRead = new BufferedReader(text);

            StringBuilder mail = new StringBuilder();
            String line = ToRead.readLine();

            while (line != null) {
                mail.append(line);
                mail.append(System.lineSeparator());
                line = ToRead.readLine();
            }
            String everything = mail.toString();

            Document doc = Jsoup.parseBodyFragment(everything);
            int left = everything.indexOf("Comments");
            int right = everything.indexOf("Defect Details");

            if (NameOfTheFile.contains("SOA")) {
                String sub = everything.substring(left - 99, right - 28);
                sub = sub.toUpperCase();
                String result = sub;
                System.out.println("Result of the comment : \n" + "\n" + result);
            }else{
                String sub = everything.substring(left - 140, right - 28);
                sub = sub.toUpperCase();
                String result = sub;
                System.out.println("Result of the comment : \n" + "\n" + result);
            }
        }
    }*/
        }
    }
    private File[] getFileListFromPath(String path){
        File directory = new File(path);
        File[] subfiles = directory.listFiles();
        String message = "The depository '" + path + "' contains " + subfiles.length + " file" + (subfiles.length > 1 ? "s" : "");
        System.out.println(message);

        return subfiles;
    }

    private String getEmail(File file)throws IOException{
        FileReader text = new FileReader(file);
        BufferedReader ToRead = new BufferedReader(text);

        StringBuilder mail = new StringBuilder();
        String line = ToRead.readLine();

        while (line != null) {
            mail.append(line);
            mail.append(System.lineSeparator());
            line = ToRead.readLine();
        }
        String everything = mail.toString();
        return everything;
    }

    private String getComments(String everything){
        int left = everything.indexOf("Comments");
        int right = everything.indexOf("Defect Details");
        String Result;
        if (everything.contains("@font-face")) {
            String sub = everything.substring(left - 99, right - 99);
            sub = sub.toUpperCase();
            Result = sub;
        }else{
            String sub = everything.substring(left - 140, right - 28);
            sub = sub.toUpperCase();
            Result = sub;
        }
        return Result;
    }


}